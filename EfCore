DbContext - for interacting with database, all the logic that is needed for entitiy framwork core like access a database, retrive, update 
            delete create table, all this logic provide by DbContext class

DbSet - classes we want in our application and create it in the database

in class BookID or Id or [Key]

Command :-
update-database
add-migration decimal
Remove-Migration
get-migration
drop-database

Rollback to old migration
update-database AddBookToDb

Data Annotation :-
[Table("tb_geners")]
[Column("Name")]
[Key]
[Required]

Relation in efcore
1.one to one - onDelete: ReferentialAction.Cascade); (if book deleted then bookdetails also be deleted)
2.one to many - 1 publisher have many book. but 1 book has only one publisher
3.many to many - 


















