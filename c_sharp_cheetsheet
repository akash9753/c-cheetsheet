C#


Linq--
var emp = from emp in lstemp where emp.Basic > 11000 && emp.Basic > 12000  select emp;
var emps = lstEmp.Where(x => x.Basic > 10000).Select(s=> new {s.Name, s.Basic, place = "jabalpur"});

var joinData = from emp in lstEmp
               join dept in lstDept
               on emp.DeptNo equals dept.DeptNo
               select new { dept.DeptName, emp.Name };

var emps = lstEmp.Join(
    lstDept,
    emp => emp.DeptNo,
    dept => dept.DeptNo,
    (emp, dept) => new
    {
        dept.DeptName,
        emp.EmpName,
        emp.Salary
    }).ToList();
-------------------------------------------------------------------------------------------------------------------------------------------------

async code
-------------------
1.Delegates
2.System.Threading
3.System.Threading.Task
------------------

1.Delegates
a.Normal delegate
    public delegate void GreetDelegate(string name);
    Action<string> greet = SayHello;

    public delegate int Operation(int a, int b);
    Func<int, int,int> op
    Func<int, int, int> add = (a, b) => a + b;

b.async delegate
o.BeginInvoke(null,null);
static void Main()
    {
        Console.WriteLine("Before");

        Func<string, string> o = Display;

        o.BeginInvoke("aaa", delegate (IAsyncResult ar)
        {
            Console.WriteLine("callback func called");
            string retval = o.EndInvoke(ar);
            Console.WriteLine("retval = " + retval);
        }, null);

        Console.WriteLine("After");
        Console.ReadLine();
    }

    static string Display(string s)
    {
        System.Threading.Thread.Sleep(5000); // Simulate time-consuming task
        Console.WriteLine("Display " + s);
        return s.ToUpper();
    }

    static void CallBackFunc(IAsyncResult ar)
    {
        // Not used in this example
    }
-----------------------

2.System.Threading
Thread t1 = new Thread(new ThreadStart(Func1));
Thread t2 = new Thread(Func2);

what are the 3 methods to perform synchronization thread in .net
1.Lock
2.enter exits monitor class
3.Interloked

----------------------
3.System.Threading.Tasks
its thread from thread pool

-------------------------------------------------------------------
char[] chars = s.ToCharArray();
string reversed = new string(chars);
Console.WriteLine(chars.GetType());
int[] inputArr = { 9,2,3,4,5,6,7 };
public static int[] secondLargest(int [] inputArr)




code remember step

Second Largest
else if (arr[i] > slargest && arr[i] < largest)
